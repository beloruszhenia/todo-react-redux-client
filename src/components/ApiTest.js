import React, { useState } from 'react';
import { useDispatch } from 'react-redux';
import { loginUser, registerUser } from '../store/slices/authSlice';

const ApiTest = () => {
  const [testResult, setTestResult] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const dispatch = useDispatch();

  const testConnection = async () => {
    setIsLoading(true);
    setTestResult('–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è...');
    
    try {
      // –°–ø—Ä–æ–±—É—î–º–æ –ø—Ä–æ—Å—Ç–∏–π –∑–∞–ø–∏—Ç –¥–æ auth endpoints, –æ—Å–∫—ñ–ª—å–∫–∏ health –º–æ–∂–µ –Ω–µ —ñ—Å–Ω—É–≤–∞—Ç–∏
      const response = await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:4000/api'}/auth/google`);
      if (response.status === 200 || response.status === 302) { // 302 –¥–ª—è —Ä–µ–¥–∏—Ä–µ–∫—Å—Ç–∞
        setTestResult('‚úÖ –ó\'—î–¥–Ω–∞–Ω–Ω—è –∑ API —É—Å–ø—ñ—à–Ω–µ!');
      } else {
        setTestResult(`‚ùå –ü–æ–º–∏–ª–∫–∞ API: ${response.status}`);
      }
    } catch (error) {
      setTestResult(`‚ùå –ü–æ–º–∏–ª–∫–∞ –∑'—î–¥–Ω–∞–Ω–Ω—è: ${error.message}`);
    } finally {
      setIsLoading(false);
    }
  };

  const testRegister = async () => {
    setIsLoading(true);
    setTestResult('–¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó...');
    
    try {
      const result = await dispatch(registerUser({
        name: 'testuser' + Date.now(),
        email: 'test' + Date.now() + '@example.com',
        password: 'password123'
      }));
      
      if (result.type.endsWith('/fulfilled')) {
        setTestResult('‚úÖ –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞!');
      } else {
        setTestResult(`‚ùå –ü–æ–º–∏–ª–∫–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó: ${result.payload}`);
      }
    } catch (error) {
      setTestResult(`‚ùå –ü–æ–º–∏–ª–∫–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó: ${error.message}`);
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div style={{ padding: '20px', border: '1px solid #ccc', margin: '20px', borderRadius: '8px' }}>
      <h3>üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è API</h3>
      <div style={{ display: 'flex', gap: '10px', marginBottom: '20px' }}>
        <button 
          onClick={testConnection} 
          disabled={isLoading}
          style={{ padding: '10px 20px', borderRadius: '4px', border: '1px solid #ccc' }}
        >
          –¢–µ—Å—Ç –∑'—î–¥–Ω–∞–Ω–Ω—è
        </button>
        <button 
          onClick={testRegister} 
          disabled={isLoading}
          style={{ padding: '10px 20px', borderRadius: '4px', border: '1px solid #ccc' }}
        >
          –¢–µ—Å—Ç —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó
        </button>
      </div>
      <div style={{ 
        padding: '10px', 
        backgroundColor: '#f5f5f5', 
        borderRadius: '4px',
        minHeight: '40px',
        display: 'flex',
        alignItems: 'center'
      }}>
        {testResult}
      </div>
    </div>
  );
};

export default ApiTest;
